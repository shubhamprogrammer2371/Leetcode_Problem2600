int kItemsWithMaximumSum(int numOnes, int numZeros, int numNegOnes, int k){
    int sum = 0;
    while(k)
    {   
        if(numOnes)
        {
            numOnes--;
            sum += 1;
        }
        else if(numZeros)
        {
            numZeros--;
            sum += 0;
        }
        else
            sum -= 1;
        k--;
    }
    return sum;
}


--------------------------------------------------------------------------------------------------------------------------

int kItemsWithMaximumSum(int numOnes, int numZeros, int numNegOnes, int k){
    int sum = 0;
    if(k <= numOnes)
        return k;
    else
    {
        sum += numOnes;
        k -= numOnes;
    }
    if(k <= numZeros)
        return sum;
    else
        k -= numZeros;
    return (sum-k);
}


--------------------------------------------------------------------------------------------------------------------------


int kItemsWithMaximumSum(int numOnes, int numZeros, int numNegOnes, int k){
    int sum = 0;
    if(k <= numOnes)
        return k;
    sum += numOnes;
    k -= numOnes;
    if(k <= numZeros)
        return sum;
    k -= numZeros;
    return (sum-k);
}



--------------------------------------------------------------------------------------------------------------------------


int kItemsWithMaximumSum(int numOnes, int numZeros, int numNegOnes, int k) {
    return fmin(k, numOnes) - fmax(0, k - numOnes - numZeros);
}